services:
  web:
    build: ./date_me
    image: backend:1.0.0
    container_name: backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 127.0.0.1:8000:8000
    #Добавляем функцию watch для синхронизации во время разработки (дополнительно прописываем в терминале --watch )
    develop:
      watch:
        - action: sync
          path: ./date_me
          target: /usr/src/date_me
          ignore:
            - node_modules/
            - .venv/
        #Ребилдим образ при изменениях в след файлах
        - action: rebuild
          path: ./date_me/requirements.txt
        - action: rebuild
          path: ./date_me/entrypoint.sh
    restart: unless-stopped
    env_file:
      - ./date_me/.env.dev
    depends_on:
      - db

  db:
    image: postgres:16-bookworm
    container_name: db
    volumes:
      - ./data:/var/lib/postgresql/data/
    restart: unless-stopped
    env_file:
      - ./date_me/.env.dev

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - 3000:3000
    depends_on:
      - web

  dbbrowser:
    image: adminer
    container_name: adminer
    ports:
      - 8080:8080
    depends_on:
      - db
  
  #Брокер для отправки сообщений через SMTP
  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    restart: unless-stopped
    ports:
      - 15672:15672
      - 5672:5672
    env_file:
      - ./date_me/.env.dev

  #Воркер для отправки сообщений-подтверждений на емейл через SMTP 
  worker:
    build:
      context: ./date_me
      dockerfile: Dockerfile.smtpworker
    env_file:
      - ./date_me/.env.dev
    environment:
    - DJANGO_SETTINGS_MODULE=date_me.settings
    volumes:
      - ./date_me:/usr/src/date_me
    restart: always
    depends_on:
      - rabbitmq

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379
    env_file:
      - ./date_me/.env.dev
  # chat-consumer:
  #   build: 
  #     context: ./date_me/dialogs:usr/src/date_me
  #     dockerfile: Dockerfile.chatconsumer
    

  
